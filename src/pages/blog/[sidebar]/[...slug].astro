---
import dayjs from "dayjs";
import utc from "dayjs/plugin/utc";

dayjs.extend(utc);

import { type CollectionEntry, getCollection } from 'astro:content';
import BlogPost from '../../../layouts/BlogPost.astro';
import Prose from "@Components/Prose.astro";

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.flatMap((post) => {
		if (post.data.rutas && post.data.rutas?.length > 1) {
			return post.data.rutas.map((ruta: string) => ({
					params: { sidebar: ruta, slug: post.slug },
					props: post,
			}))
		} else {
			return {
				params: { sidebar: post.data.rutas[0], slug: post.slug },
				props: post,
			}
		}
	});
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await post.render();
const lastModified = remarkPluginFrontmatter.lastModified ? 
		new Date(dayjs(remarkPluginFrontmatter.lastModified).utc().format('MM-DD-YYYY')) : 
		new Date(dayjs().utc().format('MM-DD-YYYY'));
---

<BlogPost headings={headings} updatedDate={lastModified} {...post.data}>
	<Prose>
		<Content />
	</Prose>
</BlogPost>
