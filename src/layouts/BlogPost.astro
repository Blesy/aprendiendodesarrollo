---
import type { MarkdownHeading } from 'astro'
import type { CollectionEntry } from 'astro:content'
import Header from '../components/Header.astro'
import PageContent from '../components/PageContent.astro'
import LeftSidebar from '../components/LeftSidebar.astro'
import RightSidebar from '../components/RightSidebar/RightSidebar.astro'
import Footer from '../components/Footer.astro'
import BaseHead from '../components/BaseHead.astro';
import { EDIT_URL, SITE, SITE_TITLE, SITE_DESCRIPTION } from '../consts'

type Props = CollectionEntry<'blog'>['data'] & {
  headings: MarkdownHeading[]
}

const { headings, ...data } = Astro.props
const canonicalURL = new URL(Astro.url.pathname, Astro.site)
const currentPage = Astro.url.pathname
const currentFile = `src/content/docs${currentPage.replace(/\/$/, '')}.mdx`
const editUrl = `${EDIT_URL}/${currentFile}`
---

<html dir={data.dir} lang="es" class="initial">
  <head>
	<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <!-- <HeadCommon />
    <HeadSEO {...data} canonicalUrl={canonicalURL} /> -->
    <title>
      {`${data.title} ðŸš€ ${SITE.title}`}
    </title>
    <style>
      body {
        width: 100%;
        display: grid;
        --gutter: 0.5rem;
        --doc-padding: 2rem;
      }

      .layout {
        display: grid;
        grid-auto-flow: column;
        grid-template-columns:
          minmax(var(--gutter), 1fr) minmax(0, var(--max-width))
          minmax(var(--gutter), 1fr);
        overflow-x: hidden;
      }

      .grid-sidebar {
        height: 100vh;
        position: sticky;
        top: 0;
        padding: 0;
      }

      #grid-left {
        position: fixed;
        z-index: 10;
        display: none;
      }

      #grid-main {
        padding: var(--doc-padding) var(--gutter);
        grid-column: 2;
        display: flex;
        flex-direction: column;
        height: 100%;
      }

      #grid-right {
        display: none;
      }

      @media (min-width: 50em) {
        .layout {
          overflow: initial;
          grid-template-columns: 20rem minmax(0, var(--max-width));
          gap: 1em;
        }

        #grid-left {
          display: flex;
          padding-left: 2rem;
          position: sticky;
          grid-column: 1;
        }
      }

      @media (min-width: 72em) {
        .layout {
          grid-template-columns: 20rem minmax(0, var(--max-width)) 18rem;
          padding-left: 0;
          padding-right: 0;
          margin: 0 auto;
        }

        #grid-right {
          grid-column: 3;
          display: flex;
        }
      }
    </style>
    
  </head>

  <body class="dark:text-white dark:bg-black bg-white text-black">
    <Header />
    <main class="layout">
      <aside id="grid-left" class="grid-sidebar" title="Site Navigation">
        <LeftSidebar currentPage={currentPage} />
      </aside>
      <div id="grid-main">
        <PageContent title={data.title} headings={headings} editUrl={editUrl}>
          <slot />
        </PageContent>
      </div>
      <aside id="grid-right" class="grid-sidebar" title="Table of Contents">
        <RightSidebar headings={headings}/>
      </aside>
    </main>
    <Footer />
  </body>
</html>
